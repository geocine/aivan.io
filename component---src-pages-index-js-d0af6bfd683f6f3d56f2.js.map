{"version":3,"sources":["webpack:///./src/components/BlogCard.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/favicon.ico","webpack:///./src/components/Toggle.js","webpack:///./src/components/Logo.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Card.js","webpack:///./src/components/Profile.js"],"names":["BlogCardStyle","Object","styled_base_browser_esm","target","name","styles","BlogCard","_ref","post","core_browser_esm","Card","padding","gatsby_browser_entry","to","slug","className","title","readable_publish_date","tag_list_array","map","tag","key","href","src","alt","id","positive_reactions_count","comments_count","IndexPage","data","Layout","Profile","allDevArticles","edges","node","components_BlogCard","assign","article","tag_list","split","trim","query","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","a","_loader__WEBPACK_IMPORTED_MODULE_3__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","p","ToggleStyle","Toggle","checkbox","useRef","dispatch","useDispatch","isDarkMode","useSelector","app","useEffect","current","checked","window","__onThemeChange","type","__theme","onClick","event","preventDefault","focus","click","__setPreferredTheme","width","height","role","style","pointerEvents","ref","aria-label","LogoStyle","prop","dark","Logo","viewBox","Header","TemplateWrapper","children","_ref2","siteMetadata","_2227692959","site","description","react","Helmet_default","meta","content","rel","favicon","components_Logo","components_Toggle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","props","ProfileStyle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","_public_static_d_2682100942_json__WEBPACK_IMPORTED_MODULE_2__","shortBio","_emotion_core__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"component---src-pages-index-js-d0af6bfd683f6f3d56f2.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styled from '@emotion/styled'\n\nimport Card from './Card'\n\nconst BlogCardStyle = styled.div`\n  margin: -20px 0;\n  h3 {\n    margin: 0px;\n    font-size: 27px;\n    line-height: 32px;\n    font-weight: 500;\n  }\n  h4 {\n    margin: 0;\n    font-size: 17px;\n  }\n  a {\n    color: var(--theme-font-color, #0a0a0a);\n  }\n  .tags {\n    font-size: 16px;\n    a {\n      margin-right: 8px;\n    }\n    text-overflow: ellipsis;\n    color: var(--theme-font-color, #0a0a0a);\n    overflow: hidden;\n    white-space: nowrap;\n  }\n  .article-engagement-count {\n    font-family: 'HelveticaNeue-CondensedBold', 'HelveticaNeueBoldCondensed',\n      'HelveticaNeue-Bold-Condensed', 'Helvetica Neue Bold Condensed',\n      'HelveticaNeueBold', 'HelveticaNeue-Bold', 'Helvetica Neue Bold',\n      'HelveticaNeue', 'Helvetica Neue', 'TeXGyreHerosCnBold', 'Helvetica',\n      'Tahoma', 'Geneva', 'Arial Narrow', 'Arial', sans-serif;\n    display: inline-block;\n    margin-right: 20px;\n    margin-top: 10px;\n    color: #666;\n    img {\n      height: 20px;\n      min-width: 26px;\n      vertical-align: -5px;\n      margin-right: 7px;\n    }\n    .engagement-count-number {\n      font-size: 15px;\n      font-weight: 400;\n    }\n  }\n`\n\nconst BlogCard = ({ post }) => (\n  <Card padding={30}>\n    <BlogCardStyle>\n      <Link to={post.slug}>\n        <div className=\"content\">\n          <h3>{post.title}</h3>\n        </div>\n      </Link>\n      <h4>\n        <Link to=\"/\">{post.readable_publish_date}</Link>\n      </h4>\n      <div className=\"tags\">\n        {post.tag_list_array.map((tag, key) => (\n          <a key={key} href=\"/\">\n            <span className=\"tag\">{`#${tag}`}</span>\n          </a>\n        ))}\n      </div>\n      <div className=\"article-engagement-count reactions-count\">\n        <Link to={post.slug}>\n          <img src=\"/assets/reactions-stack.svg\" alt=\"Reactions\" />\n          <span\n            id={`engagement-count-number-${post.id}`}\n            className=\"engagement-count-number\"\n          >\n            {post.positive_reactions_count}\n          </span>\n        </Link>\n      </div>\n      {post.comments_count ? (\n        <div className=\"article-engagement-count comments-count\">\n          <Link to={post.slug}>\n            <img src=\"/assets/comments-bubble.svg\" alt=\"chat\" />\n            <span className=\"engagement-count-number\">\n              {post.comments_count}\n            </span>\n          </Link>\n        </div>\n      ) : (\n        ''\n      )}\n    </BlogCardStyle>\n  </Card>\n)\n\nexport default BlogCard\n","import React from 'react'\n\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport BlogCard from '../components/BlogCard'\nimport Profile from '../components/Profile'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <Profile/>\n    {data.allDevArticles.edges.map((node, key) => (\n      <BlogCard\n        key={key}\n        post={{\n          ...node.node.article,\n          tag_list_array: node.node.article.tag_list\n            .split(',')\n            .map(tag => tag.trim()),\n        }}\n      />\n    ))}\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query IndexPageQuery {\n    allDevArticles(sort: {order: DESC, fields: article___created_at}) {\n      edges {\n        node {\n          article {\n            id\n            path\n            cover_image\n            title\n            slug\n            tag_list\n            flare_tag {\n              name\n            }\n            readable_publish_date\n            positive_reactions_count\n            comments_count\n            social_image\n            created_at\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-d28856b735a19086a40b3bf22d2d2a1e.ico\";","import React, { useRef, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst ToggleStyle = styled.div`\n  &.react-toggle {\n    touch-action: pan-x;\n\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    background-color: transparent;\n    border: 0;\n    padding: 0;\n\n    -webkit-touch-callout: none;\n    user-select: none;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  .react-toggle-screenreader-only {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  .react-toggle-track {\n    width: 50px;\n    height: 24px;\n    padding: 0;\n    border-radius: 30px;\n    background-color: hsl(222, 14%, 7%);\n    transition: all 0.2s ease;\n  }\n\n  .react-toggle-track-check {\n    position: absolute;\n    width: 17px;\n    height: 17px;\n    left: 5px;\n    top: 0px;\n    bottom: 0px;\n    margin-top: auto;\n    margin-bottom: auto;\n    line-height: 0;\n    opacity: 0;\n    transition: opacity 0.25s ease;\n  }\n\n  &.react-toggle--checked .react-toggle-track-check {\n    opacity: 1;\n    transition: opacity 0.25s ease;\n  }\n\n  .react-toggle-track-x {\n    position: absolute;\n    width: 17px;\n    height: 17px;\n    right: 5px;\n    top: 0px;\n    bottom: 0px;\n    margin-top: auto;\n    margin-bottom: auto;\n    line-height: 0;\n    opacity: 1;\n    transition: opacity 0.25s ease;\n  }\n\n  &.react-toggle--checked .react-toggle-track-x {\n    opacity: 0;\n  }\n\n  .react-toggle-thumb {\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 22px;\n    height: 22px;\n    border-radius: 50%;\n    background-color: #fafafa;\n    box-sizing: border-box;\n    transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n    transform: translateX(0);\n  }\n\n  &.react-toggle--checked .react-toggle-thumb {\n    transform: translateX(26px);\n    border-color: #19ab27;\n  }\n\n  &.react-toggle:active .react-toggle-thumb {\n    box-shadow: 0px 0px 5px 5px #9c9c9c;\n  }\n`\n\nconst Toggle = () => {\n  const checkbox = useRef(null)\n  const dispatch = useDispatch()\n  const isDarkMode = useSelector(({ app }) => app.isDarkMode)\n\n  useEffect(() => {\n    checkbox.current.checked = isDarkMode\n    window.__onThemeChange = () => {\n      dispatch({\n        type: 'TOGGLE_DARK_MODE',\n        isDarkMode: window.__theme === 'dark',\n      })\n    }\n  }, [])\n\n  function toggle(event) {\n    if (event.target !== checkbox) {\n      event.preventDefault()\n      checkbox.current.focus()\n      checkbox.current.click()\n      window.__setPreferredTheme(isDarkMode ? 'light' : 'dark')\n      dispatch({\n        type: 'TOGGLE_DARK_MODE',\n        isDarkMode: !isDarkMode,\n      })\n      return\n    }\n  }\n\n  return (\n    <ToggleStyle\n      className={`react-toggle ${isDarkMode ? ' react-toggle--checked' : ''}`}\n      onClick={toggle}\n    >\n      <div className=\"react-toggle-track\">\n        <div className=\"react-toggle-track-check\">\n          <img\n            alt=\"night\"\n            src=\"/assets/moon.png\"\n            width={16}\n            height={16}\n            role=\"presentation\"\n            style={{ pointerEvents: 'none' }}\n          />\n        </div>\n        <div className=\"react-toggle-track-x\">\n          <img\n            alt=\"day\"\n            src=\"/assets/sun.png\"\n            width={16}\n            height={16}\n            role=\"presentation\"\n            style={{ pointerEvents: 'none' }}\n          />\n        </div>\n      </div>\n      <div className=\"react-toggle-thumb\" />\n      <input\n        ref={checkbox}\n        className=\"react-toggle-screenreader-only\"\n        type=\"checkbox\"\n        aria-label=\"Switch between Dark and Light mode\"\n      />\n    </ToggleStyle>\n  )\n}\n\nexport default Toggle\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst LogoStyle = styled.svg`\n  width: 200px;\n  float: left;\n  filter: drop-shadow( 0 2px 1px black );\n  path {\n    fill: ${prop => (prop.dark ? '#71b964' : 'black')};\n  }\n`\n\nconst Logo = ({ isDarkMode }) => (\n  <LogoStyle viewBox=\"0 0 200 56\" dark={isDarkMode}>\n    <path d=\"M43.9 10c1.6-.7 3.8.5 3.6 2.4 0 1.9-2.5 2.9-4 1.8-1.5-1-1.3-3.5.4-4.2zm107.6 0c1.5-.7 3.6.3 3.5 2.1.2 1.6-1.5 2.9-3 2.5-2.3-.2-2.8-3.8-.5-4.6zM16.8 16.8h17.8c.6 8.2 1.2 16.4 1.9 24.6h-22V41c.8-4.7 1.6-9.5 2.4-14.2h13.3c.2-2.4.4-4.9.6-7.3h-14v-2.7m2.6 12.5v9.5h9.8c.3-3.2.5-6.3.8-9.5H19.4zM43 16.8h3.7c.6 8.2 1.3 16.4 1.9 24.6h-7.4L43 16.8zm10.3 0H57c2.2 7.3 4.5 14.6 6.7 21.9h1.4c2.2-7.3 4.5-14.6 6.7-21.9h3.7C74.2 25 73 33.2 71.7 41.4H57c-1.2-8.2-2.5-16.3-3.7-24.6zm29.6 0h17.8l1.8 24.6H80.4l2.4-14.7h13.4c.2-2.5.4-4.9.6-7.3H82.9v-2.6m2.5 12.5v9.5h9.8c.3-3.2.5-6.3.8-9.5H85.4zm23.7-12.5h20.7c.6 8.2 1.3 16.4 1.9 24.6h-7.4c.6-7.3 1.1-14.7 1.7-22h-13c.6 7.3 1.2 14.7 1.7 22h-7.4c.5-8.2 1.2-16.4 1.8-24.6zm41.4 0h3.7c.6 8.2 1.3 16.4 1.9 24.6h-7.4l1.8-24.6zm12.1 0h20.7c.6 8.2 1.3 16.4 1.9 24.6h-24.5c.7-8.2 1.4-16.4 1.9-24.6m3.9 2.6l1.5 19.5h10.1l1.5-19.5h-13.1zM139 34.2c2.5-1 5.4 1.2 5 3.9-.1 2.8-3.8 4.3-5.9 2.6-2.4-1.5-1.8-5.6.9-6.5z\" />\n  </LogoStyle>\n)\n\nexport default Logo\n","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport styled from '@emotion/styled'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport { useSelector } from 'react-redux'\n\nimport Toggle from './Toggle'\nimport Logo from './Logo'\n\nimport './styles.scss'\nimport favicon from '../../src/favicon.ico'\n\nconst Header = styled.div`\n  max-width: 825px;\n  margin: 10px auto;\n  padding: 20px;\n  width: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  h3 {\n    margin: 0;\n    color: var(--theme-font-color);\n  }\n`\n\nconst TemplateWrapper = ({ children }) => {\n  const isDarkMode = useSelector(({ app }) => app.isDarkMode)\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `)\n  const { title, description } = siteMetadata\n  return (\n    <Fragment>\n      <Helmet\n        title={title}\n        meta={[\n          {\n            name: 'theme-color',\n            content: isDarkMode ? '#282c35' : '#ffffff',\n          },\n          {\n            name: 'description',\n            content: description,\n          },\n        ]}\n      >\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\n      </Helmet>\n      <main>\n        <Header>\n          <h3>\n            <Link to=\"/\">\n              <Logo isDarkMode={isDarkMode} />\n            </Link>\n          </h3>\n          <Toggle />\n        </Header>\n        {children}\n      </main>\n    </Fragment>\n  )\n}\n\nexport default TemplateWrapper\n","import styled from '@emotion/styled'\n\nconst Card = styled.div`\n  background: var(--theme-container-bg, #fff);\n  text-align: left;\n  border: var(--theme-container-border, 1px solid #d6d6d6);\n  box-shadow: var(--theme-container-box-shadow, 3px 3px 0px #bababa);\n  border-radius: 3px;\n  max-width: 800px;\n  width: auto;\n  padding: 50px 20px;\n  margin: 0 5px 10px 5px;\n\n  @media only screen and (min-width: 600px) {\n    padding: 50px ${props => props.padding || 85}px;\n    margin: 20px auto;\n  }\n`\n\nexport default Card\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst ProfileStyle = styled.div`\n  display: flex;\n  width: 345px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  img {\n    display: inline-block;\n    width: 55px;\n    height: 55px;\n    border-radius: 50%;\n    min-width: 55px;\n    max-width: 100%;\n    box-shadow: var(--theme-container-box-shadow, 3px 3px 0px #bababa);\n    border: var(--theme-container-border, 1px solid #d6d6d6);\n  }\n  div {\n    color: var(--theme-font-color, #0a0a0a);\n    padding-left: 20px;\n\n    h4 {\n      margin: 0;\n      font-size: 18px;\n    }\n    p {\n      margin-top: 5px;\n      font-size: 15px;\n      line-height: 20px;\n    }\n  }\n  @media only screen and (min-width: 600px) {\n    width: auto;\n    max-width: 650px;\n  }\n`\n\nconst Profile = () => {\n  const {\n    site: { siteMetadata },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          name\n          shortBio\n        }\n      }\n    }\n  `)\n  const { name, shortBio } = siteMetadata\n  return (\n    <ProfileStyle>\n      <img src=\"/assets/profile.jpg\" alt={name} />\n      <div>\n        <h4>{name}</h4>\n        <p>{shortBio}</p>\n      </div>\n    </ProfileStyle>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}